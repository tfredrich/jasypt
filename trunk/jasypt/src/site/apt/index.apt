  -------
  Main
  -------

  <<Jasypt 1.3.1 has been released (July 23rd, 2007)>>. 
  
  Jasypt 1.3.1 is a maintenance release solving a configuration bug which 
  might arise when setting the encryption algorithm from a *Config object.
  
  This is the only bug found in jasypt since its first release
  in January 24th, 2007 (7,000+ downloads from SourceForge.net so far, many more
  from Maven repositories). <<Upgrade to 1.3.1 is not strictly required for 1.3 users
  unless they are directly affected by this bug>>. 
      
  Have a look at the <<{{{features.html}features}}>>.

Java Simplified Encryption

  Jasypt is a java library which allows 
  the developer to add basic encryption capabilities to his/her 
  projects with minimum effort, and without the need of having 
  deep knowledge on how cryptography works.

    * High-security, standards-based encryption techniques, both for unidirectional
    and bidirectional encryption. Encrypt passwords, texts, numbers, binaries...
    
    * Transparent integration with <<Hibernate>>.
    
    * Suitable for integration into <<Spring>>-based applications and also
      transparently integrable with <<ACEGI>> (Spring Security).

    * Open API for use with any JCE provider.

    * {{{features.html}...and much more}}

  Have a look at the complete set of <<{{{features.html}Jasypt Features}}>>
  or check the <<{{{faq.html}FAQ}}>>.

  With Jasypt, encrypting and checking a password can be as simple as...
  
----------------
BasicPasswordEncryptor passwordEncryptor = new BasicPasswordEncryptor();
String encryptedPassword = passwordEncryptor.encryptPassword(userPassword);
...
if (passwordEncryptor.checkPassword(inputPassword, encryptedPassword)) {
  // correct!
} else {
  // bad login!
}
----------------
  
  ...encrypting and decrypting a text...
  
----------------
BasicTextEncryptor textEncryptor = new BasicTextEncryptor();
textEncryptor.setPassword(myEncryptionPassword);
String myEncryptedText = textEncryptor.encrypt(myText);
...
String plainText = textEncryptor.decrypt(myEncryptedText);
----------------

  ...and what about encrypting some sensitive data directly from Hibernate?

----------------
<class name="Employee" table="EMPLOYEE">
  ...
  <property name="address" column="ADDRESS" type="encryptedString" />
  <property name="salary" column="SALARY" type="encryptedDecimal" />
  ...
<class>
----------------
  
  But of course, besides easy, <<jasypt is highly configurable>>. You will
  be able to choose encryption algorithms, salt generation and many more
  advanced features...
  

* Current version

  Current stable version is <<1.3.1>> (Released: July 23rd, 2007) [{{{download.html}Download}}] [{{{changelog.html}ChangeLog}}]


* Encryption can be simple to use, spread the word!
  
  Have you written an article, tutorial or review about Jasypt in English or
  in your own language? <<{{{team.html}Tell us}}>> so that we can link it from the
  {{{externalresources.html}External Resources}} page.

  