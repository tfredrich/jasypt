
Java Simplified Encryption

  Jasypt is a java library which allows 
  the developer to add basic encryption capabilities to his/her 
  projects with minimum effort, and without the need of having 
  deep knowledge on how cryptography works.

  With Jasypt, encrypting and checking a password can be as simple as...
  
----------------
PasswordEncryptor passwordEncryptor = new PasswordEncryptor();
String encryptedPassword = passwordEncryptor.encryptPassword(userPassword);
...
if (passwordEncryptor.checkPassword(inputPassword, encryptedPassword)) {
  // correct!
} else {
  // bad login!
}
----------------
  
  And encrypting and decrypting a text...
  
----------------
TextEncryptor textEncryptor = new TextEncryptor();
textEncryptor.setPassword(myEncryptionPassword);
String myEncryptedText = textEncryptor.encrypt(myText);
...
String plainText = textEncryptor.decrypt(myEncryptedText);
----------------

  And what about encrypting some sensitive data directly from Hibernate?

----------------
<class name="UserData" table="USER_DATA">
  ...
  <property name="address" column="ADDRESS" type="encrypted" />
  ...
<class>
----------------
  

* Check the features!

    * High-security, standards-based encryption techniques, both for unidirectional
    and bidirectional encryption. Encrypt passwords, texts, binaries...
    
    * Transparent integration with <<Hibernate>>.
    
    * Suitable for integration into <<Spring>>-based applications.
    
    * Transparent integration with <<ACEGI Security>> (Spring Security).

    * {{{features.html}...and much more}}

  Have a look at the complete set of <<{{{features.html}Jasypt Features}}>>
  or have a look at the <<{{{faq.html}FAQ}}>>.

* Current version

  Current stable version is <<1.1>> (Released: February 24th, 2007) [{{{download.html}Download}}] [{{{changelog.html}ChangeLog}}]


* Encryption can be simple to use, spread the word!
  
  Have you written an article, tutorial or review about Jasypt in English or
  in your own language? <<{{{team.html}Tell us}}>> so that we can link it from the
  {{{externalresources.html}External Resources}} page.

  